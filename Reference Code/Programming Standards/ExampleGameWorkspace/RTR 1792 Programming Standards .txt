Updating the Robot
* NEVER DO IT ON WIFI 
* WIRED CONNECTIONS ONLY
* CAN BRICK A RIO IF DONE OTHERWISE

Filesystem
   1. Workspace Directories 
   * Go in the Documents directory
   * They are always named after their game with each word capitalized
   1. Ex: DeepSpaceWorkspace
   1. Workspace Files
   * Header files define, implementations go in source files
   * File names have the first letter capitalized
   * Should never be more than one or two words at the most
   * Subclass Appropriately
   * Header Files
   1. Goes in the include directory in src
   2. Must end in .hpp
   3. Should include “#pragma once”
   * Source Code 
   1. Goes into the cpp directory in src
   2. Must end in .cpp
   1. Github Repositories
   * Words must be separated by hyphens  


N[a]aming Standards 
   1. Variables/Constructors/Functions
   * Camel Case
   * First word is lowercase
   * Every following word is uppercase
   * Ex: exampleVariableName
   * Exceptions
   * Acronyms
   * Always completely capitalized, no matter their position
   * Reserved words cannot be used as variables 
   1. Constants
   * Must be completely capitalized
   * Must have underscores between words
   * Ex: #define PI 3.14159
   1. Classes
   1. Every word is capitalized
   * Ex: DriveSystem
   1. Drive Motor Declarations and Motor Controller Serialization
   1. All variable/constructor rules apply
   2. Name follows in this order
   * System
   * Location front/back or top/bottom
   * Location right to left
   * Identifier
   * Identifiers: Master, Slave
   * Ex: driveMotorFrontRightMaster, intakeMotorLeft
   1. Peripheral Declarations
   1. Sensors
   * Name is as follows
   * System
   1. Ex: Lift, Intake, Drive
   * Sensor Type
   1. Ex: Encoder, Limit, Ultrasonic
   * Location
   1. Only necessary if there are multiple sensors of the same type


Code Structure
   1. Braces
   * Paste from example document
   * Beginning braces are one space after the condition
   * All end braces are on their own line
   1. Includes
   * Always the top of the program after the header
   * Default to arrows but use quotation marks if necessary  
   * Always add pragma once at the top of every src file


Documentation
   1. BOF
   * Boxed up in a comment
   * Filename
   * Date of creation
   * Original creator
   * RIO Firmware version at creation
   * FRC Library version at creation
   * Motor controller types in use
   * Motor controller firmware version at creation
   * Purpose
   1. Comments
   * If in-line, use //
   * If block or multi-line, use  /*   */
   * One before every line or group of lines of code that explains its purpose
[a]Make an example source file demonstrating the programming standards